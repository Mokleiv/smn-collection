// <auto-generated />
using System;
using HomeAPI.Data.ApplicationDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HomeAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("HomeAPI.Data.Entities.Exercise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PreferredReps")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PreferredSets")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("HomeAPI.Data.Entities.MuscleFocus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MuscleFocuses");
                });

            modelBuilder.Entity("HomeAPI.Data.Entities.Workout", b =>
                {
                    b.Property<Guid>("WorkoutProgramId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ExersiceId")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Day")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Reps")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Sets")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("WorkoutProgramId", "ExersiceId");

                    b.HasIndex("ExersiceId");

                    b.ToTable("Workout");
                });

            modelBuilder.Entity("HomeAPI.Data.Entities.WorkoutFocus", b =>
                {
                    b.Property<Guid>("WorkoutProgramId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MuscleFocusId")
                        .HasColumnType("TEXT");

                    b.HasKey("WorkoutProgramId", "MuscleFocusId");

                    b.HasIndex("MuscleFocusId");

                    b.ToTable("WorkoutFocus");
                });

            modelBuilder.Entity("HomeAPI.Data.Entities.WorkoutProgram", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WorkoutPrograms");
                });

            modelBuilder.Entity("HomeAPI.Data.Entities.Workout", b =>
                {
                    b.HasOne("HomeAPI.Data.Entities.Exercise", "Exersice")
                        .WithMany("Workouts")
                        .HasForeignKey("ExersiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomeAPI.Data.Entities.WorkoutProgram", "WorkoutProgram")
                        .WithMany("Workouts")
                        .HasForeignKey("WorkoutProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exersice");

                    b.Navigation("WorkoutProgram");
                });

            modelBuilder.Entity("HomeAPI.Data.Entities.WorkoutFocus", b =>
                {
                    b.HasOne("HomeAPI.Data.Entities.MuscleFocus", "MuscleFocus")
                        .WithMany("WorkoutFocuses")
                        .HasForeignKey("MuscleFocusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomeAPI.Data.Entities.WorkoutProgram", "WorkoutProgram")
                        .WithMany("WorkoutFocuses")
                        .HasForeignKey("WorkoutProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MuscleFocus");

                    b.Navigation("WorkoutProgram");
                });

            modelBuilder.Entity("HomeAPI.Data.Entities.Exercise", b =>
                {
                    b.Navigation("Workouts");
                });

            modelBuilder.Entity("HomeAPI.Data.Entities.MuscleFocus", b =>
                {
                    b.Navigation("WorkoutFocuses");
                });

            modelBuilder.Entity("HomeAPI.Data.Entities.WorkoutProgram", b =>
                {
                    b.Navigation("WorkoutFocuses");

                    b.Navigation("Workouts");
                });
#pragma warning restore 612, 618
        }
    }
}
